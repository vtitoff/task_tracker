services:
  tracker_app:
    build:
      dockerfile: Dockerfile
      context: ./app
    container_name: app
    env_file:
      - app/.env
    restart: always
    networks:
      - app_network
    volumes:
      - ./app/:/opt/app/
      - ./app/logs/:/var/log/app/
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    container_name: nginx
    build:
      context: ./nginx/.
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
      - ./nginx/logs/:/var/log/nginx/
      - ./app/static:/opt/app/static/
    depends_on:
      - tracker_app
    ports:
      - "80:80"
    networks:
      - app_network

  postgres:
    image: postgres:16
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    env_file: app/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - app_network


networks:
  app_network:

volumes:
  postgres_data:
